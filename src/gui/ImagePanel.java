package gui;

import java.awt.*;
import java.awt.geom.Rectangle2D;
import java.awt.geom.Rectangle2D.Float;
import java.awt.image.BufferedImage;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import assembly.*;

public class ImagePanel extends JPanel
{
	/**
	 * Generated by Eclipse
	 */
	private static final long serialVersionUID = 3006769532505931833L;
	
	private Image img;
	
	public ImagePanel(String img)
	{
		this(new ImageIcon(img).getImage());
	}
	
	public ImagePanel(Image img)
	{
		this.img = img;
		Dimension size = new Dimension(img.getWidth(null), img.getHeight(null));
		setPreferredSize(size);
		setMinimumSize(size);
		setMaximumSize(size);
		setSize(size);
		setLayout(null);
	}
	
	public void paintComponent(Graphics g)
	{
		g.drawImage(img, 0, 0, null);
	}
	
	public void setImage(Image image)
	{
		img = image;
		setPreferredSize(new Dimension(img.getWidth(null), img.getHeight(null)));
	}
	
	public static Image getFragmentGroupImage(String sequence, List<List<Fragment>> fragmentGroups, Fragment selected,
		FragmentPositionSource source, int scale)
	{
		int width = sequence.length() * scale;
		if (width == 0)
		{
			width = 1;
		}
		int height = (fragmentGroups.size() * 2 + 1) * scale;
		BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
		
		Graphics2D g2d = image.createGraphics();
		Color red = new Color(255, 0, 0, 255);
		g2d.setColor(red);
		g2d.fill(new Rectangle2D.Float(0, 0, sequence.length() * scale, scale));
		g2d.dispose();
		
		int i = 0;
		for (List<Fragment> list : fragmentGroups)
		{
			for (Fragment fragment : list)
			{
				g2d = image.createGraphics();
				Color color = fragment.equals(selected) ? new Color(0, 255, 0, 255) : new Color(0, 0, 0, 255);
				g2d.setColor(color);
				
				g2d.fill(new Rectangle2D.Float(fragment.getPosition(source) * scale, (i + 1) * 2 * scale,
					fragment.string.length() * scale, scale));
				g2d.dispose();
			}
			i++;
		}
		
		return image;
	}
}
